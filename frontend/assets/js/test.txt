const API_URL = 'http://127.0.0.1:5000/api';

// --- DOM Initialization ---
document.addEventListener('DOMContentLoaded', () => {
    // --- Mobile Navigation Logic ---
    const navToggle = document.querySelector('.mobile-nav-toggle');
    const navLinks = document.querySelector('.nav-links');
    if (navToggle && navLinks) {
        navToggle.addEventListener('click', () => {
            navToggle.classList.toggle('active');
            navLinks.classList.toggle('active');
        });
    }

    // --- Page-Specific Content Loading ---
    if (document.getElementById('trending-product-list')) {
        loadTrendingProducts();
    }
    if (document.getElementById('testimonial-list')) {
        loadTestimonials();
    }
    if (document.getElementById('all-reviews-list')) {
        loadAllReviews();
    }
    if (document.getElementById('shop-product-list')) {
        const urlParams = new URLSearchParams(window.location.search);
        const category = urlParams.get('category');
        loadAllProducts(category || 'all');
        setupCategoryFilters();
    }
    if (document.getElementById('testimonial-form')) {
        document.getElementById('testimonial-form').addEventListener('submit', handleTestimonialSubmit);
    }
    
    updateCartCount();
});

// --- Data Fetching ---
async function fetchProducts(category = null) {
    let url = `${API_URL}/products`;
    if (category && category !== 'all') {
        url += `?category=${category}`;
    }
    try {
        const response = await fetch(url);
        if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
        return await response.json();
    } catch (error) {
        console.error("Could not fetch products:", error);
        return [];
    }
}

// --- Product Loading Functions ---
async function loadTrendingProducts() {
    const container = document.getElementById('trending-product-list');
    if (!container) return;

    const allProducts = await fetchProducts();
    const trendingProducts = allProducts.filter(p => p.isTrending === 'y').slice(0, 8);
    const wishlist = getWishlist();
    container.innerHTML = '';

    trendingProducts.forEach(product => {
        const isWishlisted = wishlist.some(item => item._id === product._id);
        const swiperSlide = document.createElement('div');
        swiperSlide.className = "swiper-slide";
        const firstImage = (product.images && product.images.length > 0) ? product.images[0] : 'https://via.placeholder.com/400x550?text=No+Image';
        swiperSlide.innerHTML = `
            <div class="product-card">
                <div class="product-image">
                    <img src="${firstImage}" alt="${product.name}">
                    <button class="wishlist-btn ${isWishlisted ? 'active' : ''}" onclick="toggleWishlist('${product._id}', this)">
                        <i class="fa-solid fa-heart"></i>
                    </button>
                </div>
                <div class="product-info">
                    <h3>${product.name}</h3>
                    <p class="price">₹${product.price.toFixed(2)}</p>
                    <button class="add-to-cart-btn" onclick="addToCart('${product._id}')">Add to Cart</button>
                </div>
            </div>`;
        container.appendChild(swiperSlide);
    });
    initializeFeaturedCarousel();
}

async function loadAllProducts(category = 'all') {
    const container = document.getElementById('shop-product-list');
    if (!container) return;

    const productsToDisplay = await fetchProducts(category);
    const wishlist = getWishlist();
    container.innerHTML = '';

    productsToDisplay.forEach(product => {
        const isWishlisted = wishlist.some(item => item._id === product._id);
        const productCard = document.createElement('div');
        productCard.className = "product-card";
        
        let slides = '';
        if (product.images && product.images.length > 0) {
            product.images.forEach(imgUrl => {
                slides += `<div class="swiper-slide"><img src="${imgUrl}" alt="${product.name}"></div>`;
            });
        } else {
            slides = `<div class="swiper-slide"><img src="https://via.placeholder.com/400x550?text=No+Image" alt="${product.name}"></div>`;
        }

        productCard.innerHTML = `
            <div class="product-image">
                <div class="swiper">
                    <div class="swiper-wrapper">${slides}</div>
                    <div class="swiper-pagination"></div>
                    <div class="swiper-button-next"></div>
                    <div class="swiper-button-prev"></div>
                </div>
                <button class="wishlist-btn ${isWishlisted ? 'active' : ''}" onclick="toggleWishlist('${product._id}', this)">
                    <i class="fa-solid fa-heart"></i>
                </button>
            </div>
            <div class="product-info">
                <h3>${product.name}</h3>
                <p class="price">₹${product.price.toFixed(2)}</p>
                <button class="add-to-cart-btn" onclick="addToCart('${product._id}')">Add to Cart</button>
            </div>`;
        container.appendChild(productCard);
    });
    initializeShopCarousels();
    updateActiveFilterButton(category);
}

// --- Testimonial Functions ---
async function loadTestimonials() {
    const container = document.getElementById('testimonial-list');
    if (!container) return;
    try {
        const response = await fetch(`${API_URL}/testimonials/approved`);
        const testimonials = await response.json();
        container.innerHTML = '';
        if (testimonials.length === 0) {
            container.innerHTML = '<p style="padding: 2rem; text-align: center; width: 100%;">Be the first to leave a review!</p>';
            return;
        }
        testimonials.forEach(t => {
            const slide = document.createElement('div');
            slide.className = 'swiper-slide testimonial-slide';
            slide.innerHTML = `<p class="summary">"${t.summary}"</p><p class="name">- ${t.name}</p>`;
            container.appendChild(slide);
        });
        new Swiper('.testimonial-swiper', {
            loop: testimonials.length > 1,
            autoplay: { delay: 5000, disableOnInteraction: false },
            pagination: { el: '.swiper-pagination', clickable: true },
        });
    } catch (error) { console.error("Could not load testimonials:", error); }
}

async function loadAllReviews() {
    const container = document.getElementById('all-reviews-list');
    if (!container) return;
    try {
        const response = await fetch(`${API_URL}/testimonials/approved`);
        const testimonials = await response.json();
        container.innerHTML = '';
        testimonials.forEach(t => {
            const reviewCard = document.createElement('div');
            reviewCard.className = 'testimonial-slide';
            reviewCard.innerHTML = `<p class="summary">"${t.summary}"</p>${t.full_review ? `<p>${t.full_review}</p>` : ''}<p class="name">- ${t.name}</p>`;
            container.appendChild(reviewCard);
        });
    } catch (error) { console.error("Could not load reviews:", error); }
}

window.openTestimonialModal = function () {
    const modal = document.getElementById('testimonial-modal');
    if (modal) {
        modal.style.display = 'flex';
    }
};

async function handleTestimonialSubmit(event) {
    event.preventDefault();
    const testimonialData = {
        name: document.getElementById('testimonial-name').value,
        contact: document.getElementById('testimonial-contact').value,
        summary: document.getElementById('testimonial-summary').value,
        full_review: document.getElementById('testimonial-full').value
    };
    try {
        const response = await fetch(`${API_URL}/testimonials`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(testimonialData)
        });
        if (!response.ok) throw new Error('Submission failed.');
        closeModal('testimonial-modal');
        showToast('Thank you! Your review is awaiting approval.');
        document.getElementById('testimonial-form').reset();
    } catch (error) {
        console.error('Error submitting testimonial:', error);
        alert('There was an error submitting your review. Please try again.');
    }
}

// --- UI Initializers ---
function setupCategoryFilters(){const e=document.getElementById("category-filter-bar");e&&e.addEventListener("click",e=>{e.target.classList.contains("filter-btn")&&loadAllProducts(e.target.dataset.category)})}
function updateActiveFilterButton(e){document.querySelectorAll(".filter-btn").forEach(t=>{t.classList.toggle("active",t.dataset.category===e)})}
function initializeFeaturedCarousel(){new Swiper(".featured-swiper",{loop:!0,slidesPerView:1,spaceBetween:20,autoplay:{delay:3e3,disableOnInteraction:!1},navigation:{nextEl:".featured-carousel-container .swiper-button-next",prevEl:".featured-carousel-container .swiper-button-prev"},breakpoints:{640:{slidesPerView:2},992:{slidesPerView:3},1200:{slidesPerView:4}}})}
function initializeShopCarousels(){document.querySelectorAll("#shop-product-list .swiper").forEach(e=>{new Swiper(e,{loop:!0,pagination:{el:".swiper-pagination",clickable:!0},navigation:{nextEl:".swiper-button-next",prevEl:".swiper-button-prev"}})})
}

// --- Wishlist Logic ---
function getWishlist(){return JSON.parse(localStorage.getItem("wishlist"))||[]}
function saveWishlist(e){localStorage.setItem("wishlist",JSON.stringify(e))}
async function toggleWishlist(e,t){let o=getWishlist();const a=o.some(t=>t._id===e);if(a)o=o.filter(t=>t._id!==e),t.classList.remove("active"),showToast("Removed from wishlist");else{const t=await fetchProducts();const a=t.find(t=>t._id===e);a&&(o.push(a),t.classList.add("active"),showToast("Added to wishlist!"))}saveWishlist(o)}
function openWishlistModal(){const e=document.getElementById("wishlist-modal");if(!e)return;const t=getWishlist();let o=`<div class="cart-modal-content"><button class="cart-modal-close" onclick="closeModal('wishlist-modal')">&times;</button><h3>Your Wishlist</h3>`;0===t.length?o+="<p>Your wishlist is empty.</p>":(o+='<div class="modal-header"><button class="modal-clear-btn" onclick="clearWishlist()">Clear Wishlist</button></div>',o+='<ul class="cart-items-list">',t.forEach(e=>{const t=e.images&&e.images.length>0?e.images[0]:"https://via.placeholder.com/60x60?text=No+Img";o+=`<li class="cart-item"><img src="${t}" alt="${e.name}" class="cart-item-image"><div class="cart-item-details"><span class="cart-item-name">${e.name}</span><span class="cart-item-price">₹${e.price.toFixed(2)}</span></div><button onclick="addToCart('${e._id}');" class="add-to-cart-btn" style="width: auto; margin-left: 1rem;">Add to Cart</button></li>`}),o+="</ul>"),o+="</div>",e.innerHTML=o,e.style.display="flex"}
function clearWishlist(){saveWishlist([]),updateAllWishlistIcons(),openWishlistModal(),showToast("Wishlist has been cleared.")}
function updateAllWishlistIcons(){document.querySelectorAll(".wishlist-btn").forEach(e=>{e.classList.remove("active")})}

// --- Shopping Cart & Other UI Functions ---
function closeModal(e){document.getElementById(e).style.display="none"}
window.onclick=function(e){e.target.classList.contains("modal-overlay")&&(e.target.style.display="none")}
function getCart(){const e=document.cookie.split("; ").find(e=>e.startsWith("cart="));if(e)try{return JSON.parse(decodeURIComponent(e.split("=")[1]))}catch(e){return[]}return[]}
function saveCart(e){const t=new Date(Date.now()+6048e5).toUTCString();document.cookie=`cart=${encodeURIComponent(JSON.stringify(e))}; expires=${t}; path=/`}
async function addToCart(e){const t=getCart(),o=t.find(t=>t._id===e);if(o)o.quantity++;else{const o=await fetchProducts(),a=o.find(t=>t._id===e);if(a){const n=a.images&&a.images.length>0?a.images[0]:"https://via.placeholder.com/60x60?text=No+Img";t.push({_id:a._id,name:a.name,price:a.price,quantity:1,image:n})}else return}saveCart(t),updateCartCount(),showToast("Added to your cart")}
function openCartModal(){const e=document.getElementById("cart-modal");if(!e)return;let t=`<div class="cart-modal-content"><button class="cart-modal-close" onclick="closeModal('cart-modal')">&times;</button><h3>Your Shopping Bag</h3>`;const o=getCart();if(0===o.length)t+='<p>Your cart is empty.</p>';else{let e='<ul class="cart-items-list">';let a=0;o.forEach(t=>{e+=`<li class="cart-item"><img src="${t.image}" alt="${t.name}" class="cart-item-image"><div class="cart-item-details"><span class="cart-item-name">${t.name}</span><span class="cart-item-price">Qty: ${t.quantity} &times; ₹${t.price.toFixed(2)}</span></div><button onclick="removeFromCart('${t._id}')" class="cart-item-remove">&times;</button></li>`,a+=t.price*t.quantity}),e+="</ul>",t+=e,t+=`<div class="modal-footer"><div id="modal-cart-total"><strong>Total: ₹${a.toFixed(2)}</strong></div><button class="modal-clear-btn" onclick="clearCart()">Clear Cart</button></div>`,t+='<button class="whatsapp-btn" onclick="sendToWhatsApp()">Place Order on WhatsApp</button>'}t+="</div>",e.innerHTML=t,e.style.display="flex"}
function removeFromCart(e){let t=getCart();const o=t.findIndex(t=>t._id===e);-1!==o&&(t[o].quantity>1?t[o].quantity--:t.splice(o,1),saveCart(t),updateCartCount(),openCartModal())}
function clearCart(){saveCart([]),updateCartCount(),openCartModal(),showToast("Cart has been cleared.")}
function updateCartCount(){const e=getCart(),t=e.reduce((e,t)=>e+t.quantity,0),o=document.getElementById("cart-count");o&&(o.innerText=t)}
function showToast(e){const t=document.getElementById("toast-container"),o=document.createElement("div");o.className="toast",o.textContent=e,t.appendChild(o),setTimeout(()=>{o.classList.add("show")},10),setTimeout(()=>{o.classList.remove("show"),setTimeout(()=>{o.parentNode&&o.parentNode.removeChild(o)},500)},3e3)}
function sendToWhatsApp(){const e=getCart();if(0===e.length)return void alert("Your cart is empty!");let t="Hello! I'd like to place the following order:%0A%0A",o=0;e.forEach((e,a)=>{t+=`${a+1}. ${e.name} (x${e.quantity}) - ₹${(e.price*e.quantity).toFixed(2)}%0A`,o+=e.price*e.quantity}),t+=`%0A*Total: ₹${o.toFixed(2)}*`;const a="919425545594";window.open(`https://wa.me/${a}?text=${t}`,"_blank")}


document.addEventListener('DOMContentLoaded', function () {
    const reviewBtn = document.getElementById('open-testimonial-btn');
    if (reviewBtn) {
        reviewBtn.addEventListener('click', function (event) {
            event.preventDefault();
            const modal = document.getElementById('testimonial-modal');
            if (modal) modal.style.display = 'flex';
        });
    }
});
